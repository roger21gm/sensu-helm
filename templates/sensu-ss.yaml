---
# sensu-backend cluster w/ sensu-agent sidecars
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sensu.fullname" . }}-backend
  labels:
    {{- include "sensu.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "sensu.selectorLabels" . | nindent 6 }}
      app: sensu
  serviceName: sensu
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: {{- include "sensu.selectorLabels" . | nindent 8 }}
        app: sensu
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: sensu-asset-server-ca-cert
        secret:
          secretName: sensu-asset-server-ca-cert
          defaultMode: 256
          optional: true
      initContainers:
      - name: wait-for-etcd
        image: tutum/dnsutils:latest
        command: [
          "/bin/sh",
          "-c",
          "export READY=1 && while [ $READY -gt 0 ]; do host $(ETCD); READY=$?; sleep 2; done;",
        ]
        env:
        - name: ETCD
          value: {{ include "sensu.fullname" . }}-etcd-headless
        ports: []
        volumeMounts: []
      containers:
      - name: sensu-backend
        image: "{{ .Values.sensu.image.repository }}:{{ .Values.sensu.image.tag }}"
        command: [
          "/opt/sensu/bin/sensu-backend", "start",
          "--log-level", "debug",
          "--debug", "true",
          "--no-embed-etcd",
          "--etcd-client-urls", "http://$(ETCD_SVC):2379",
          "--etcd-name", "sensu",
        ]
        env:
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ETCD_SVC
          value: {{ include "sensu.fullname" . }}-etcd-headless
        volumeMounts: []
        ports:
        - protocol: TCP
          containerPort: 8080
        - protocol: TCP
          containerPort: 8081
        - protocol: TCP
          containerPort: 3000
        resources:
          requests:
            memory: 2048M
            cpu: 1.0
          limits:
            memory: 4096M
            cpu: 2.0
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          exec:
            command:
            - wget
            - --no-check-certificate
            - -q
            - -O-
            - http://127.0.0.1:8080/health
